[Actions]
; common Values for (un)installation
include_insert "common.opsiinc"

if not(HasMinimumSpace ("%SystemDrive%", $MinimumSpace$))
	LogError "Not enough space on %SystemDrive%, " + $MinimumSpace$ + " on drive %SystemDrive% needed for " + $ProductId$
	; Stop process and set installation status to failed	
	isFatalError
else
	comment "Show product picture"
	ShowBitmap "%ScriptPath%\o4i.png" $ProductName$
	
	if FileExists("%ScriptPath%\delsub64.opsiscript")
		comment "Start uninstall sub section"
		Sub "%ScriptPath%\delsub64.opsiscript"
	endif

	Message "Installing %installingProdName% (%installingProdVersion%) 64 Bit..."
	comment "Starting the setup program"
	Winbatch_install
	Set $ExitCode$ = getLastExitCode
	if stringToBool(isNsisExitcodeFatal($ExitCode$, "True", $ErrorString$))
		isFatalError
	endif

	comment "Test for installation success"

	; Ergebnis ist StringList (mehrere Einträge möglich);
	; in einer Zeile werden drei Ergebnisse mit "|" abgetrennt geliefert: Registrykey (mit Pfad) | Bereich Registry (kann direkt getRegistryValue übergeben werden | DisplayName
	; z.B. HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Test64|64bit|Test Registry Entry64
	Set $ResultList$ = SearchRegistryUninstallKeys($ProductName$)

	if (count($ResultList$) = "0")
		comment "No installations of " + $ProductName$ + " found in registry"
	else
		Set $RegId$ = takeString (0,splitString(takeString(0,$ResultList$), '|'))
		Set $RegBitScope$ = takeString (1,splitString(takeString(0,$ResultList$), '|'))

		Set $UninstallProgram$ = GetRegistryValue($RegId$, "UninstallString", $RegBitScope$)
		Set $InstallDir$ = ExtractFilePath($UninstallProgram$)
		Set $InstalledVersion$ = GetRegistryValue($RegId$, "DisplayVersion", $RegBitScope$)

		; speichert die Version des mitinstallierten Grass GIS nach Abfrage der Ordnerstruktur
		Set $DirForGrassVersion$ = '"' + $InstallDir$ + '\apps\grass\"'
		Set $InstalledGGISVersion$ =  getValueBySeparator("grass", "-", getOutStreamFromSection("DosInAnIcon_get_path $DirForGrassVersion$"))

		; der Pfad zu QGIS ändert sich wenn es eine LTR-Version ist
		if FileExists($InstallDir$ + "\bin\qgis-ltr-grass" + takestring (0, splitString($InstalledGGISVersion$, ".")) + ".bat")
			Set $PathToExe$ = $InstallDir$ + "\bin\qgis-ltr-grass" + takestring (0, splitString($InstalledGGISVersion$, ".")) + ".bat"
		else
			Set $PathToExe$ = $InstallDir$ + "\bin\qgis-grass" + takestring (0, splitString($InstalledGGISVersion$, ".")) + ".bat"
		endif

		; verifiziert ob die Produktversion mit der installierten Version übereinstimmt
		if not ($InstalledVersion$ = $ProductVersion$)
			logError "Fatal: Installed product version is " + $InstalledVersion$ + " but is supposed to be " + $ProductVersion$
			isFatalError
		endif

		if $DesktopLink$ = "false"
			comment "deleting desktop icons"
			; speichert die ersten zwei Nummern der Produktversion
			Set $MajorProductVersion$ = composeString (createStringList (takestring (0, splitString($InstalledVersion$, ".")), takestring (1, splitString($InstalledVersion$, "."))), ".")
	
			; die Namen der Verknüpfungen werden hier definiert da die String-Konkatenation in der Linkfolder Section nicht funktioniert
			Set $GGISShortcutName$ = "GRASS GIS " + $InstalledGGISVersion$
			Set $QGISShortcutName$ = "QGIS " + $MajorProductVersion$
			Linkfolder_deleteDefaultDesktopIcons
		endif

		comment "include custom post install file"
		set $CustomPostInstall$ = getProductProperty("custom-post-install","none")
		if not ($CustomPostInstall$ = "none")
			if FileExists("%ScriptPath%\custom\" + $CustomPostInstall$)
				include_insert "%ScriptPath%\custom\" + $CustomPostInstall$
			endif
		endif
	endif
endif

[Winbatch_install]
;NSIS Installer
"%ScriptPath%\$InstFile$" /S

[DosInAnIcon_get_path]
@echo off
dir %1 /B

[Linkfolder_deleteDefaultDesktopIcons]
set_basefolder common_desktopdirectory
set_subfolder ""
delete_element "OSGeo4W Shell"
delete_element $GGISShortcutName$
delete_subfolder $QGISShortcutName$
