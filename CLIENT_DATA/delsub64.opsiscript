; Ergebnis ist StringList (mehrere Einträge möglich);
; in einer Zeile werden drei Ergebnisse mit "|" abgetrennt geliefert: Registrykey (mit Pfad) | Bereich Registry (kann direkt getRegistryValue übergeben werden | DisplayName
; z.B. HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Test64|64bit|Test Registry Entry64
Set $ResultList$ = SearchRegistryUninstallKeys($ProductName$)

if (count($ResultList$) = "0")
	comment "No installations of " + $ProductName$ + " found in registry"
else
	Set $RegId$ = takeString (0,splitString(takeString(0,$ResultList$), '|'))
	Set $RegBitScope$ = takeString (1,splitString(takeString(0,$ResultList$), '|'))

	Set $UninstallProgram$ = GetRegistryValue($RegId$, "UninstallString", $RegBitScope$)
	Set $InstallDir$ = ExtractFilePath($UninstallProgram$)
	Set $InstalledVersion$ = GetRegistryValue($RegId$, "DisplayVersion", $RegBitScope$)

	Winbatch_uninstall
	Set $ExitCode$ = getLastExitCode
	if stringToBool(isNsisExitcodeFatal($ExitCode$, "True", $ErrorString$))
		isFatalError
	endif

	; da der Installer die Registry nicht aufräumt muss dies Manuell erledigt weden
	Registry_uninstall

	; das Skript muss kurz warten, da sonst das Löschen der Dateien fehlschlägt
	sleepSeconds 120

	; löscht vorhandene Überbleibsel des Programmes
	if (Fileexists($InstallDir$))
		Files_uninstall
	endif

	comment "include custom post install file"
	set $CustomPostDeinstall$ = getProductProperty("custom-post-deinstall","none")
	if not ($CustomPostDeinstall$ = "none")
		if FileExists("%ScriptPath%\custom\" + $CustomPostDeinstall$)
			include_insert "%ScriptPath%\custom\" + $CustomPostDeinstall$
		endif
	endif

	if $DesktopLink$ = "true"
		comment "deleting desktop icons"
		; speichert die Version des mitinstallierten Grass GIS nach Abfrage der Ordnerstruktur
		Set $DirForGrassVersion$ = '"' + $InstallDir$ + '\apps\grass\"'
		Set $InstalledGGISVersion$ =  getValueBySeparator("grass", "-", getOutStreamFromSection("DosInAnIcon_get_path $DirForGrassVersion$"))
	
		; speichert die ersten zwei Nummern der Produktversion
		Set $MajorProductVersion$ = composeString (createStringList (takestring (0, splitString($InstalledVersion$, ".")), takestring (1, splitString($InstalledVersion$, "."))), ".")
	
		; die Namen der Verknüpfungen werden hier definiert da die String-Konkatenation in der Linkfolder Section nicht funktioniert
		Set $GGISShortcutName$ = "GRASS GIS " + $InstalledGGISVersion$
		Set $QGISShortcutName$ = "QGIS " + $MajorProductVersion$
		Linkfolder_deleteDesktopIcons
	endif
endif

[Winbatch_uninstall]
"$UninstallProgram$" /S

[Files_uninstall]
del -sf $InstallDir$

[Registry_uninstall]
deletekey [$RegId$]

[Linkfolder_deleteDesktopIcons]
set_basefolder common_desktopdirectory
set_subfolder ""
delete_element "OSGeo4W Shell"
delete_element $GGISShortcutName$
delete_subfolder $QGISShortcutName$
